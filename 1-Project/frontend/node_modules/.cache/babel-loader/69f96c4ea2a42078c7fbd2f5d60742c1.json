{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\exporter\\exporter.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\exporter\\exporter.js","mtime":1641838498836},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { mapKeys } from 'lodash';\nimport ExporterSchema from '@/shared/exporter/exporter-schema';\nimport { Excel } from '@/shared/excel/excel';\n\nvar Exporter = /*#__PURE__*/function () {\n  function Exporter(fields, excelFileName) {\n    _classCallCheck(this, Exporter);\n\n    this.schema = new ExporterSchema(fields);\n    this.excelFileName = excelFileName;\n  }\n\n  _createClass(Exporter, [{\n    key: \"transformAndExportAsExcelFile\",\n    value: function transformAndExportAsExcelFile(rows) {\n      var _this = this;\n\n      var exportableData = rows.map(function (row) {\n        var rowCasted = _this.schema.cast(row);\n\n        return _this._makeNameHeadersIntoLabels(rowCasted);\n      });\n      return Excel.exportAsExcelFile(exportableData, this.schema.labels, this.excelFileName + '_' + new Date().getTime());\n    }\n  }, {\n    key: \"_makeNameHeadersIntoLabels\",\n    value: function _makeNameHeadersIntoLabels(row) {\n      var _this2 = this;\n\n      return mapKeys(row, function (value, key) {\n        return _this2.schema.labelOf(key);\n      });\n    }\n  }]);\n\n  return Exporter;\n}();\n\nexport { Exporter as default };",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/shared/exporter/exporter.js"],"names":["mapKeys","ExporterSchema","Excel","Exporter","fields","excelFileName","schema","rows","exportableData","map","row","rowCasted","cast","_makeNameHeadersIntoLabels","exportAsExcelFile","labels","Date","getTime","value","key","labelOf"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,KAAT,QAAsB,sBAAtB;;IAEqBC,Q;AACnB,oBAAYC,MAAZ,EAAoBC,aAApB,EAAmC;AAAA;;AACjC,SAAKC,MAAL,GAAc,IAAIL,cAAJ,CAAmBG,MAAnB,CAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACD;;;;WAED,uCAA8BE,IAA9B,EAAoC;AAAA;;AAClC,UAAMC,cAAc,GAAGD,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD,EAAS;AACvC,YAAMC,SAAS,GAAG,KAAI,CAACL,MAAL,CAAYM,IAAZ,CAAiBF,GAAjB,CAAlB;;AACA,eAAO,KAAI,CAACG,0BAAL,CAAgCF,SAAhC,CAAP;AACD,OAHsB,CAAvB;AAKA,aAAOT,KAAK,CAACY,iBAAN,CACLN,cADK,EAEL,KAAKF,MAAL,CAAYS,MAFP,EAGL,KAAKV,aAAL,GAAqB,GAArB,GAA2B,IAAIW,IAAJ,GAAWC,OAAX,EAHtB,CAAP;AAKD;;;WAED,oCAA2BP,GAA3B,EAAgC;AAAA;;AAC9B,aAAOV,OAAO,CAACU,GAAD,EAAM,UAACQ,KAAD,EAAQC,GAAR,EAAgB;AAClC,eAAO,MAAI,CAACb,MAAL,CAAYc,OAAZ,CAAoBD,GAApB,CAAP;AACD,OAFa,CAAd;AAGD;;;;;;SAvBkBhB,Q","sourcesContent":["import { mapKeys } from 'lodash';\nimport ExporterSchema from '@/shared/exporter/exporter-schema';\nimport { Excel } from '@/shared/excel/excel';\n\nexport default class Exporter {\n  constructor(fields, excelFileName) {\n    this.schema = new ExporterSchema(fields);\n    this.excelFileName = excelFileName;\n  }\n\n  transformAndExportAsExcelFile(rows) {\n    const exportableData = rows.map((row) => {\n      const rowCasted = this.schema.cast(row);\n      return this._makeNameHeadersIntoLabels(rowCasted);\n    });\n\n    return Excel.exportAsExcelFile(\n      exportableData,\n      this.schema.labels,\n      this.excelFileName + '_' + new Date().getTime(),\n    );\n  }\n\n  _makeNameHeadersIntoLabels(row) {\n    return mapKeys(row, (value, key) => {\n      return this.schema.labelOf(key);\n    });\n  }\n}\n"]}]}