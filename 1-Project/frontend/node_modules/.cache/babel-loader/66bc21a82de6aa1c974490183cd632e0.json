{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\fields\\string-array-field.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\fields\\string-array-field.js","mtime":1641838499378},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _possibleConstructorReturn from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\getPrototypeOf.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as yup from 'yup';\nimport GenericField from '@/shared/fields/generic-field';\nimport { i18n } from '@/i18n';\n\nvar StringArrayField = /*#__PURE__*/function (_GenericField) {\n  _inherits(StringArrayField, _GenericField);\n\n  var _super = _createSuper(StringArrayField);\n\n  function StringArrayField(name, label) {\n    var _this;\n\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$required = _ref.required,\n        required = _ref$required === void 0 ? false : _ref$required,\n        _ref$min = _ref.min,\n        min = _ref$min === void 0 ? undefined : _ref$min,\n        _ref$max = _ref.max,\n        max = _ref$max === void 0 ? undefined : _ref$max;\n\n    _classCallCheck(this, StringArrayField);\n\n    _this = _super.call(this, name, label);\n    _this.required = required;\n    _this.min = min;\n    _this.max = max;\n    return _this;\n  }\n\n  _createClass(StringArrayField, [{\n    key: \"forPresenter\",\n    value: function forPresenter(value) {\n      return value || [];\n    }\n  }, {\n    key: \"forFormInitialValue\",\n    value: function forFormInitialValue(value) {\n      return value || [];\n    }\n  }, {\n    key: \"forFilterInitialValue\",\n    value: function forFilterInitialValue(value) {\n      if (value && !Array.isArray(value)) {\n        return [value];\n      }\n\n      return value || [];\n    }\n  }, {\n    key: \"forFilterRules\",\n    value: function forFilterRules() {\n      return undefined;\n    }\n  }, {\n    key: \"forFormRules\",\n    value: function forFormRules() {\n      var output = [];\n\n      if (this.required) {\n        output.push({\n          type: 'array',\n          required: !!this.required,\n          message: i18n('validation.mixed.required').replace('${path}', this.label)\n        });\n      }\n\n      if (this.min || this.min === 0) {\n        output.push({\n          type: 'array',\n          min: this.min,\n          message: i18n('validation.array.min').replace('${path}', this.label).replace('${min}', this.min)\n        });\n      }\n\n      if (this.max || this.max === 0) {\n        output.push({\n          type: 'array',\n          max: this.max,\n          message: i18n('validation.array.max').replace('${path}', this.label).replace('${max}', this.max)\n        });\n      }\n\n      return output;\n    }\n  }, {\n    key: \"forFormCast\",\n    value: function forFormCast() {\n      var yupChain = yup.array().compact().ensure().of(yup.string().trim()).label(this.label).transform(function (value, originalValue) {\n        if (!originalValue) {\n          return originalValue;\n        }\n\n        if (Array.isArray(originalValue)) {\n          return originalValue;\n        }\n\n        return [originalValue];\n      });\n      return yupChain;\n    }\n  }, {\n    key: \"forFilterCast\",\n    value: function forFilterCast() {\n      var yupChain = yup.array().compact().ensure().of(yup.string().trim()).label(this.label).transform(function (value, originalValue) {\n        if (!originalValue) {\n          return originalValue;\n        }\n\n        if (Array.isArray(originalValue)) {\n          return originalValue;\n        }\n\n        return [originalValue];\n      });\n      return yupChain;\n    }\n  }, {\n    key: \"forImport\",\n    value: function forImport() {\n      var yupChain = yup.mixed().label(this.label).transform(function (value) {\n        return Array.isArray(value) ? value : (value || '').trim().split(' ').filter(function (item) {\n          return !!item;\n        }).map(function (item) {\n          return item.trim();\n        });\n      });\n\n      if (this.required) {\n        yupChain = yupChain.required();\n      }\n\n      return yupChain;\n    }\n  }, {\n    key: \"forExport\",\n    value: function forExport() {\n      var yupChain = yup.mixed().label(this.label);\n      return yupChain;\n    }\n  }]);\n\n  return StringArrayField;\n}(GenericField);\n\nexport { StringArrayField as default };",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/shared/fields/string-array-field.js"],"names":["yup","GenericField","i18n","StringArrayField","name","label","required","min","undefined","max","value","Array","isArray","output","push","type","message","replace","yupChain","array","compact","ensure","of","string","trim","transform","originalValue","mixed","split","filter","item","map"],"mappings":"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","sourcesContent":["import * as yup from 'yup';\nimport GenericField from '@/shared/fields/generic-field';\nimport { i18n } from '@/i18n';\n\nexport default class StringArrayField extends GenericField {\n  constructor(\n    name,\n    label,\n    {\n      required = false,\n      min = undefined,\n      max = undefined,\n    } = {},\n  ) {\n    super(name, label);\n\n    this.required = required;\n    this.min = min;\n    this.max = max;\n  }\n\n  forPresenter(value) {\n    return value || [];\n  }\n\n  forFormInitialValue(value) {\n    return value || [];\n  }\n\n  forFilterInitialValue(value) {\n    if (value && !Array.isArray(value)) {\n      return [value];\n    }\n\n    return value || [];\n  }\n\n  forFilterRules() {\n    return undefined;\n  }\n\n  forFormRules() {\n    const output = [];\n\n    if (this.required) {\n      output.push({\n        type: 'array',\n        required: !!this.required,\n        message: i18n('validation.mixed.required').replace(\n          '${path}',\n          this.label,\n        ),\n      });\n    }\n\n    if (this.min || this.min === 0) {\n      output.push({\n        type: 'array',\n        min: this.min,\n        message: i18n('validation.array.min')\n          .replace('${path}', this.label)\n          .replace('${min}', this.min),\n      });\n    }\n\n    if (this.max || this.max === 0) {\n      output.push({\n        type: 'array',\n        max: this.max,\n        message: i18n('validation.array.max')\n          .replace('${path}', this.label)\n          .replace('${max}', this.max),\n      });\n    }\n\n    return output;\n  }\n\n  forFormCast() {\n    let yupChain = yup\n      .array()\n      .compact()\n      .ensure()\n      .of(yup.string().trim())\n      .label(this.label)\n      .transform((value, originalValue) => {\n        if (!originalValue) {\n          return originalValue;\n        }\n\n        if (Array.isArray(originalValue)) {\n          return originalValue;\n        }\n\n        return [originalValue];\n      });\n\n    return yupChain;\n  }\n\n  forFilterCast() {\n    let yupChain = yup\n      .array()\n      .compact()\n      .ensure()\n      .of(yup.string().trim())\n      .label(this.label)\n      .transform((value, originalValue) => {\n        if (!originalValue) {\n          return originalValue;\n        }\n\n        if (Array.isArray(originalValue)) {\n          return originalValue;\n        }\n\n        return [originalValue];\n      });\n\n    return yupChain;\n  }\n\n  forImport() {\n    let yupChain = yup\n      .mixed()\n      .label(this.label)\n      .transform((value) =>\n        Array.isArray(value)\n          ? value\n          : (value || '')\n              .trim()\n              .split(' ')\n              .filter((item) => !!item)\n              .map((item) => item.trim()),\n      );\n\n    if (this.required) {\n      yupChain = yupChain.required();\n    }\n\n    return yupChain;\n  }\n\n  forExport() {\n    let yupChain = yup.mixed().label(this.label);\n    return yupChain;\n  }\n}\n"]}]}