{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\book\\book-service.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\book\\book-service.js","mtime":1641838496998},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport authAxios from '@/shared/axios/auth-axios';\nexport var BookService = /*#__PURE__*/function () {\n  function BookService() {\n    _classCallCheck(this, BookService);\n  }\n\n  _createClass(BookService, null, [{\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, data) {\n        var body, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                body = {\n                  id: id,\n                  data: data\n                };\n                _context.next = 3;\n                return authAxios.put(\"/book/\".concat(id), body);\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function update(_x, _x2) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"destroyAll\",\n    value: function () {\n      var _destroyAll = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ids) {\n        var params, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = {\n                  ids: ids\n                };\n                _context2.next = 3;\n                return authAxios.delete(\"/book\", {\n                  params: params\n                });\n\n              case 3:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function destroyAll(_x3) {\n        return _destroyAll.apply(this, arguments);\n      }\n\n      return destroyAll;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data) {\n        var body, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                body = {\n                  data: data\n                };\n                _context3.next = 3;\n                return authAxios.post(\"/book\", body);\n\n              case 3:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function create(_x4) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"import\",\n    value: function () {\n      var _import2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(values, importHash) {\n        var body, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                body = {\n                  data: values,\n                  importHash: importHash\n                };\n                _context4.next = 3;\n                return authAxios.post(\"/book/import\", body);\n\n              case 3:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function _import(_x5, _x6) {\n        return _import2.apply(this, arguments);\n      }\n\n      return _import;\n    }()\n  }, {\n    key: \"find\",\n    value: function () {\n      var _find = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return authAxios.get(\"/book/\".concat(id));\n\n              case 2:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response.data);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function find(_x7) {\n        return _find.apply(this, arguments);\n      }\n\n      return find;\n    }()\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(filter, orderBy, limit, offset) {\n        var params, response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                params = {\n                  filter: filter,\n                  orderBy: orderBy,\n                  limit: limit,\n                  offset: offset\n                };\n                _context6.next = 3;\n                return authAxios.get(\"/book\", {\n                  params: params\n                });\n\n              case 3:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function list(_x8, _x9, _x10, _x11) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }, {\n    key: \"listAutocomplete\",\n    value: function () {\n      var _listAutocomplete = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(query, limit) {\n        var params, response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                params = {\n                  query: query,\n                  limit: limit\n                };\n                _context7.next = 3;\n                return authAxios.get(\"/book/autocomplete\", {\n                  params: params\n                });\n\n              case 3:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response.data);\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function listAutocomplete(_x12, _x13) {\n        return _listAutocomplete.apply(this, arguments);\n      }\n\n      return listAutocomplete;\n    }()\n  }]);\n\n  return BookService;\n}();",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/modules/book/book-service.js"],"names":["authAxios","BookService","id","data","body","put","response","ids","params","delete","post","values","importHash","get","filter","orderBy","limit","offset","query"],"mappings":"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","sourcesContent":["import authAxios from '@/shared/axios/auth-axios';\n\nexport class BookService {\n  static async update(id, data) {\n    const body = {\n      id,\n      data,\n    };\n\n    const response = await authAxios.put(\n      `/book/${id}`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async destroyAll(ids) {\n    const params = {\n      ids,\n    };\n\n    const response = await authAxios.delete(`/book`, {\n      params,\n    });\n\n    return response.data;\n  }\n\n  static async create(data) {\n    const body = {\n      data,\n    };\n\n    const response = await authAxios.post(\n      `/book`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async import(values, importHash) {\n    const body = {\n      data: values,\n      importHash,\n    };\n\n    const response = await authAxios.post(\n      `/book/import`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async find(id) {\n    const response = await authAxios.get(`/book/${id}`);\n    return response.data;\n  }\n\n  static async list(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n    };\n\n    const response = await authAxios.get(`/book`, {\n      params,\n    });\n\n    return response.data;\n  }\n\n  static async listAutocomplete(query, limit) {\n    const params = {\n      query,\n      limit,\n    };\n\n    const response = await authAxios.get(\n      `/book/autocomplete`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n}\n"]}]}