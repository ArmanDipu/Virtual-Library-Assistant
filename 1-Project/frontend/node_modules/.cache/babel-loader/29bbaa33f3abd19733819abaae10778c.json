{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\exporter\\exporter-schema.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\exporter\\exporter-schema.js","mtime":1641838498817},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport * as yup from 'yup';\n\nvar ExporterSchema = /*#__PURE__*/function () {\n  function ExporterSchema(fields) {\n    _classCallCheck(this, ExporterSchema);\n\n    this.fields = fields;\n    this.yupSchema = this.buildSchema();\n  }\n\n  _createClass(ExporterSchema, [{\n    key: \"labels\",\n    get: function get() {\n      return this.fields.map(function (field) {\n        return field.label;\n      });\n    }\n  }, {\n    key: \"labelOf\",\n    value: function labelOf(name) {\n      var field = this.fields.find(function (field) {\n        return field.name === name;\n      });\n\n      if (field) {\n        return field.label;\n      }\n\n      return name;\n    }\n  }, {\n    key: \"buildSchema\",\n    value: function buildSchema() {\n      var shape = {};\n      this.fields.forEach(function (field) {\n        shape[field.name] = field.forExport();\n      });\n      return yup.object().shape(shape).noUnknown(true);\n    }\n  }, {\n    key: \"cast\",\n    value: function cast(row) {\n      return this.yupSchema.cast(row);\n    }\n  }]);\n\n  return ExporterSchema;\n}();\n\nexport { ExporterSchema as default };",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/shared/exporter/exporter-schema.js"],"names":["yup","ExporterSchema","fields","yupSchema","buildSchema","map","field","label","name","find","shape","forEach","forExport","object","noUnknown","row","cast"],"mappings":";;;;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;;IAEqBC,c;AACnB,0BAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiB,KAAKC,WAAL,EAAjB;AACD;;;;SAED,eAAa;AACX,aAAO,KAAKF,MAAL,CAAYG,GAAZ,CAAgB,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,KAAjB;AAAA,OAAhB,CAAP;AACD;;;WAED,iBAAQC,IAAR,EAAc;AACZ,UAAMF,KAAK,GAAG,KAAKJ,MAAL,CAAYO,IAAZ,CACZ,UAACH,KAAD;AAAA,eAAWA,KAAK,CAACE,IAAN,KAAeA,IAA1B;AAAA,OADY,CAAd;;AAIA,UAAIF,KAAJ,EAAW;AACT,eAAOA,KAAK,CAACC,KAAb;AACD;;AAED,aAAOC,IAAP;AACD;;;WAED,uBAAc;AACZ,UAAME,KAAK,GAAG,EAAd;AAEA,WAAKR,MAAL,CAAYS,OAAZ,CAAoB,UAACL,KAAD,EAAW;AAC7BI,QAAAA,KAAK,CAACJ,KAAK,CAACE,IAAP,CAAL,GAAoBF,KAAK,CAACM,SAAN,EAApB;AACD,OAFD;AAIA,aAAOZ,GAAG,CACPa,MADI,GAEJH,KAFI,CAEEA,KAFF,EAGJI,SAHI,CAGM,IAHN,CAAP;AAID;;;WAED,cAAKC,GAAL,EAAU;AACR,aAAO,KAAKZ,SAAL,CAAea,IAAf,CAAoBD,GAApB,CAAP;AACD;;;;;;SArCkBd,c","sourcesContent":["import * as yup from 'yup';\n\nexport default class ExporterSchema {\n  constructor(fields) {\n    this.fields = fields;\n    this.yupSchema = this.buildSchema();\n  }\n\n  get labels() {\n    return this.fields.map((field) => field.label);\n  }\n\n  labelOf(name) {\n    const field = this.fields.find(\n      (field) => field.name === name,\n    );\n\n    if (field) {\n      return field.label;\n    }\n\n    return name;\n  }\n\n  buildSchema() {\n    const shape = {};\n\n    this.fields.forEach((field) => {\n      shape[field.name] = field.forExport();\n    });\n\n    return yup\n      .object()\n      .shape(shape)\n      .noUnknown(true);\n  }\n\n  cast(row) {\n    return this.yupSchema.cast(row);\n  }\n}\n"]}]}