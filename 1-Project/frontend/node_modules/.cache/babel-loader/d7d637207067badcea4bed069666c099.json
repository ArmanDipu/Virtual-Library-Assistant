{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\auth\\user-field.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\auth\\user-field.js","mtime":1641838496481},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport RelationToOneField from '@/shared/fields/relation-to-one-field';\nimport { IamService } from '@/modules/iam/iam-service';\nimport RelationToManyField from '@/shared/fields/relation-to-many-field';\nimport Permissions from '@/security/permissions';\nexport var UserField = /*#__PURE__*/function () {\n  function UserField() {\n    _classCallCheck(this, UserField);\n  }\n\n  _createClass(UserField, null, [{\n    key: \"relationToOne\",\n    value: function relationToOne(name, label, options) {\n      return new RelationToOneField(name, label, '/iam', Permissions.values.iamRead, IamService.fetchUserAutocomplete, function (record) {\n        if (!record) {\n          return null;\n        }\n\n        var label = record.email;\n\n        if (record.fullName) {\n          label = \"\".concat(record.fullName, \" <\").concat(record.email, \">\");\n        }\n\n        return {\n          id: record.id,\n          label: label\n        };\n      }, options);\n    }\n  }, {\n    key: \"relationToMany\",\n    value: function relationToMany(name, label, options) {\n      return new RelationToManyField(name, label, '/iam', Permissions.values.iamRead, IamService.fetchUserAutocomplete, function (record) {\n        if (!record) {\n          return null;\n        }\n\n        var label = record.email;\n\n        if (record.fullName) {\n          label = \"\".concat(record.fullName, \" <\").concat(record.email, \">\");\n        }\n\n        return {\n          id: record.id,\n          label: label\n        };\n      }, options);\n    }\n  }]);\n\n  return UserField;\n}();",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/modules/auth/user-field.js"],"names":["RelationToOneField","IamService","RelationToManyField","Permissions","UserField","name","label","options","values","iamRead","fetchUserAutocomplete","record","email","fullName","id"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,uCAA/B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,uBAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2C;AACzC,aAAO,IAAIP,kBAAJ,CACLK,IADK,EAELC,KAFK,EAGL,MAHK,EAILH,WAAW,CAACK,MAAZ,CAAmBC,OAJd,EAKLR,UAAU,CAACS,qBALN,EAML,UAACC,MAAD,EAAY;AACV,YAAI,CAACA,MAAL,EAAa;AACX,iBAAO,IAAP;AACD;;AAED,YAAIL,KAAK,GAAGK,MAAM,CAACC,KAAnB;;AAEA,YAAID,MAAM,CAACE,QAAX,EAAqB;AACnBP,UAAAA,KAAK,aAAMK,MAAM,CAACE,QAAb,eAA0BF,MAAM,CAACC,KAAjC,MAAL;AACD;;AAED,eAAO;AACLE,UAAAA,EAAE,EAAEH,MAAM,CAACG,EADN;AAELR,UAAAA,KAAK,EAALA;AAFK,SAAP;AAID,OArBI,EAsBLC,OAtBK,CAAP;AAwBD;AA1BH;AAAA;AAAA,WA4BE,wBAAsBF,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4C;AAC1C,aAAO,IAAIL,mBAAJ,CACLG,IADK,EAELC,KAFK,EAGL,MAHK,EAILH,WAAW,CAACK,MAAZ,CAAmBC,OAJd,EAKLR,UAAU,CAACS,qBALN,EAML,UAACC,MAAD,EAAY;AACV,YAAI,CAACA,MAAL,EAAa;AACX,iBAAO,IAAP;AACD;;AAED,YAAIL,KAAK,GAAGK,MAAM,CAACC,KAAnB;;AAEA,YAAID,MAAM,CAACE,QAAX,EAAqB;AACnBP,UAAAA,KAAK,aAAMK,MAAM,CAACE,QAAb,eAA0BF,MAAM,CAACC,KAAjC,MAAL;AACD;;AAED,eAAO;AACLE,UAAAA,EAAE,EAAEH,MAAM,CAACG,EADN;AAELR,UAAAA,KAAK,EAALA;AAFK,SAAP;AAID,OArBI,EAsBLC,OAtBK,CAAP;AAwBD;AArDH;;AAAA;AAAA","sourcesContent":["import RelationToOneField from '@/shared/fields/relation-to-one-field';\nimport { IamService } from '@/modules/iam/iam-service';\nimport RelationToManyField from '@/shared/fields/relation-to-many-field';\nimport Permissions from '@/security/permissions';\n\nexport class UserField {\n  static relationToOne(name, label, options) {\n    return new RelationToOneField(\n      name,\n      label,\n      '/iam',\n      Permissions.values.iamRead,\n      IamService.fetchUserAutocomplete,\n      (record) => {\n        if (!record) {\n          return null;\n        }\n\n        let label = record.email;\n\n        if (record.fullName) {\n          label = `${record.fullName} <${record.email}>`;\n        }\n\n        return {\n          id: record.id,\n          label,\n        };\n      },\n      options,\n    );\n  }\n\n  static relationToMany(name, label, options) {\n    return new RelationToManyField(\n      name,\n      label,\n      '/iam',\n      Permissions.values.iamRead,\n      IamService.fetchUserAutocomplete,\n      (record) => {\n        if (!record) {\n          return null;\n        }\n\n        let label = record.email;\n\n        if (record.fullName) {\n          label = `${record.fullName} <${record.email}>`;\n        }\n\n        return {\n          id: record.id,\n          label,\n        };\n      },\n      options,\n    );\n  }\n}\n"]}]}