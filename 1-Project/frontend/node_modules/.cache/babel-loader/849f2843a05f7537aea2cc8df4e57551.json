{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\iam-view-store.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\iam-view-store.js","mtime":1641838497548},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport Errors from '@/shared/error/errors';\nimport { routerAsync } from '@/app-module';\nimport { IamService } from '@/modules/iam/iam-service';\nimport Message from '@/shared/message/message';\nimport { i18n } from '@/i18n';\nexport default {\n  namespaced: true,\n  state: {\n    loading: false,\n    record: null\n  },\n  getters: {\n    record: function record(state) {\n      return state.record;\n    },\n    loading: function loading(state) {\n      return !!state.loading;\n    }\n  },\n  mutations: {\n    CHANGE_STATUS_STARTED: function CHANGE_STATUS_STARTED(state) {\n      state.loading = true;\n    },\n    CHANGE_STATUS_ERROR: function CHANGE_STATUS_ERROR(state) {\n      state.loading = false;\n    },\n    FIND_STARTED: function FIND_STARTED(state) {\n      state.record = null;\n      state.loading = true;\n    },\n    FIND_SUCCESS: function FIND_SUCCESS(state, payload) {\n      state.record = payload;\n      state.loading = false;\n    },\n    FIND_ERROR: function FIND_ERROR(state) {\n      state.record = null;\n      state.loading = false;\n    }\n  },\n  actions: {\n    doFind: function () {\n      var _doFind = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, id) {\n        var commit, record;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.prev = 1;\n                commit('FIND_STARTED');\n                _context.next = 5;\n                return IamService.find(id);\n\n              case 5:\n                record = _context.sent;\n                commit('FIND_SUCCESS', record);\n                _context.next = 14;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                Errors.handle(_context.t0);\n                commit('FIND_ERROR');\n                routerAsync().push('/iam');\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9]]);\n      }));\n\n      function doFind(_x, _x2) {\n        return _doFind.apply(this, arguments);\n      }\n\n      return doFind;\n    }(),\n    doToggleStatus: function () {\n      var _doToggleStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {\n        var getters, commit, dispatch, record, isEnabling;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                getters = _ref2.getters, commit = _ref2.commit, dispatch = _ref2.dispatch;\n                _context2.prev = 1;\n                record = getters.record;\n                commit('CHANGE_STATUS_STARTED');\n                isEnabling = !!record.disabled;\n\n                if (!isEnabling) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 8;\n                return IamService.enable([record.id]);\n\n              case 8:\n                _context2.next = 12;\n                break;\n\n              case 10:\n                _context2.next = 12;\n                return IamService.disable([record.id]);\n\n              case 12:\n                if (isEnabling) {\n                  Message.success(i18n('iam.doEnableSuccess'));\n                } else {\n                  Message.success(i18n('iam.doDisableSuccess'));\n                }\n\n                dispatch('doFind', record.id);\n                _context2.next = 20;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](1);\n                Errors.handle(_context2.t0);\n                commit('CHANGE_STATUS_ERROR');\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 16]]);\n      }));\n\n      function doToggleStatus(_x3) {\n        return _doToggleStatus.apply(this, arguments);\n      }\n\n      return doToggleStatus;\n    }()\n  }\n};",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/modules/iam/iam-view-store.js"],"names":["Errors","routerAsync","IamService","Message","i18n","namespaced","state","loading","record","getters","mutations","CHANGE_STATUS_STARTED","CHANGE_STATUS_ERROR","FIND_STARTED","FIND_SUCCESS","payload","FIND_ERROR","actions","doFind","id","commit","find","handle","push","doToggleStatus","dispatch","isEnabling","disabled","enable","disable","success"],"mappings":"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","sourcesContent":["import Errors from '@/shared/error/errors';\nimport { routerAsync } from '@/app-module';\nimport { IamService } from '@/modules/iam/iam-service';\nimport Message from '@/shared/message/message';\nimport { i18n } from '@/i18n';\n\nexport default {\n  namespaced: true,\n\n  state: {\n    loading: false,\n    record: null,\n  },\n\n  getters: {\n    record: (state) => state.record,\n    loading: (state) => !!state.loading,\n  },\n\n  mutations: {\n    CHANGE_STATUS_STARTED(state) {\n      state.loading = true;\n    },\n\n    CHANGE_STATUS_ERROR(state) {\n      state.loading = false;\n    },\n\n    FIND_STARTED(state) {\n      state.record = null;\n      state.loading = true;\n    },\n\n    FIND_SUCCESS(state, payload) {\n      state.record = payload;\n      state.loading = false;\n    },\n\n    FIND_ERROR(state) {\n      state.record = null;\n      state.loading = false;\n    },\n  },\n\n  actions: {\n    async doFind({ commit }, id) {\n      try {\n        commit('FIND_STARTED');\n        const record = await IamService.find(id);\n        commit('FIND_SUCCESS', record);\n      } catch (error) {\n        Errors.handle(error);\n        commit('FIND_ERROR');\n        routerAsync().push('/iam');\n      }\n    },\n\n    async doToggleStatus({ getters, commit, dispatch }) {\n      try {\n        const record = getters.record;\n\n        commit('CHANGE_STATUS_STARTED');\n\n        const isEnabling = !!record.disabled;\n\n        if (isEnabling) {\n          await IamService.enable([record.id]);\n        } else {\n          await IamService.disable([record.id]);\n        }\n\n        if (isEnabling) {\n          Message.success(i18n('iam.doEnableSuccess'));\n        } else {\n          Message.success(i18n('iam.doDisableSuccess'));\n        }\n\n        dispatch('doFind', record.id);\n      } catch (error) {\n        Errors.handle(error);\n        commit('CHANGE_STATUS_ERROR');\n      }\n    },\n  },\n};\n"]}]}