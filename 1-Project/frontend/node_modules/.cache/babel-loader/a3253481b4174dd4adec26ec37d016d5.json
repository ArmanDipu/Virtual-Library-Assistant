{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\excel\\excel.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\excel\\excel.js","mtime":1641838498791},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import _classCallCheck from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\nexport var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\nexport var EXCEL_TYPE_WITH_CHARSET = \"\".concat(EXCEL_TYPE, \";charset=UTF-8\");\nexport var EXCEL_EXTENSION = '.xlsx';\nexport var Excel = /*#__PURE__*/function () {\n  function Excel() {\n    _classCallCheck(this, Excel);\n  }\n\n  _createClass(Excel, null, [{\n    key: \"exportAsExcelFile\",\n    value: function exportAsExcelFile(json, header, fileName) {\n      var worksheet = XLSX.utils.json_to_sheet(json, {\n        header: header,\n        skipHeader: false\n      });\n      var workbook = {\n        Sheets: {\n          data: worksheet\n        },\n        SheetNames: ['data']\n      };\n      var excelBuffer = XLSX.write(workbook, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      this.saveAsExcelFile(excelBuffer, fileName);\n    }\n  }, {\n    key: \"saveAsExcelFile\",\n    value: function saveAsExcelFile(buffer, fileName) {\n      var data = new Blob([buffer], {\n        type: EXCEL_TYPE_WITH_CHARSET\n      });\n      FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\n    }\n  }]);\n\n  return Excel;\n}();",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/shared/excel/excel.js"],"names":["FileSaver","XLSX","EXCEL_TYPE","EXCEL_TYPE_WITH_CHARSET","EXCEL_EXTENSION","Excel","json","header","fileName","worksheet","utils","json_to_sheet","skipHeader","workbook","Sheets","data","SheetNames","excelBuffer","write","bookType","type","saveAsExcelFile","buffer","Blob","saveAs"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,IAAMC,UAAU,GACrB,mEADK;AAEP,OAAO,IAAMC,uBAAuB,aAAMD,UAAN,mBAA7B;AACP,OAAO,IAAME,eAAe,GAAG,OAAxB;AAEP,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,2BAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAC/C,UAAIC,SAAS,GAAGR,IAAI,CAACS,KAAL,CAAWC,aAAX,CAAyBL,IAAzB,EAA+B;AAC7CC,QAAAA,MAAM,EAANA,MAD6C;AAE7CK,QAAAA,UAAU,EAAE;AAFiC,OAA/B,CAAhB;AAKA,UAAIC,QAAQ,GAAG;AACbC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAEN;AAAR,SADK;AAEbO,QAAAA,UAAU,EAAE,CAAC,MAAD;AAFC,OAAf;AAKA,UAAIC,WAAW,GAAGhB,IAAI,CAACiB,KAAL,CAAWL,QAAX,EAAqB;AACrCM,QAAAA,QAAQ,EAAE,MAD2B;AAErCC,QAAAA,IAAI,EAAE;AAF+B,OAArB,CAAlB;AAKA,WAAKC,eAAL,CAAqBJ,WAArB,EAAkCT,QAAlC;AACD;AAlBH;AAAA;AAAA,WAoBE,yBAAuBc,MAAvB,EAA+Bd,QAA/B,EAAyC;AACvC,UAAMO,IAAI,GAAG,IAAIQ,IAAJ,CAAS,CAACD,MAAD,CAAT,EAAmB;AAC9BF,QAAAA,IAAI,EAAEjB;AADwB,OAAnB,CAAb;AAGAH,MAAAA,SAAS,CAACwB,MAAV,CAAiBT,IAAjB,EAAuBP,QAAQ,GAAGJ,eAAlC;AACD;AAzBH;;AAAA;AAAA","sourcesContent":["import FileSaver from 'file-saver';\nimport XLSX from 'xlsx';\n\nexport const EXCEL_TYPE =\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\nexport const EXCEL_TYPE_WITH_CHARSET = `${EXCEL_TYPE};charset=UTF-8`;\nexport const EXCEL_EXTENSION = '.xlsx';\n\nexport class Excel {\n  static exportAsExcelFile(json, header, fileName) {\n    let worksheet = XLSX.utils.json_to_sheet(json, {\n      header,\n      skipHeader: false,\n    });\n\n    let workbook = {\n      Sheets: { data: worksheet },\n      SheetNames: ['data'],\n    };\n\n    let excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array',\n    });\n\n    this.saveAsExcelFile(excelBuffer, fileName);\n  }\n\n  static saveAsExcelFile(buffer, fileName) {\n    const data = new Blob([buffer], {\n      type: EXCEL_TYPE_WITH_CHARSET,\n    });\n    FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\n  }\n}\n"]}]}