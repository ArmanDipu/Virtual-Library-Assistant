{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\settings\\settings-store.js","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\settings\\settings-store.js","mtime":1641838498601},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1641838766164}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { SettingsService } from '@/modules/settings/settings-service';\nimport Errors from '@/shared/error/errors';\nimport { routerAsync } from '@/app-module';\nimport Message from '@/shared/message/message';\nimport { i18n } from '@/i18n';\nexport default {\n  namespaced: true,\n  state: {\n    findLoading: false,\n    saveLoading: false,\n    settings: null\n  },\n  getters: {\n    settings: function settings(state) {\n      return state.settings;\n    },\n    findLoading: function findLoading(state) {\n      return !!state.findLoading;\n    },\n    saveLoading: function saveLoading(state) {\n      return !!state.saveLoading;\n    }\n  },\n  mutations: {\n    FIND_STARTED: function FIND_STARTED(state) {\n      state.settings = null;\n      state.findLoading = true;\n    },\n    FIND_SUCCESS: function FIND_SUCCESS(state, payload) {\n      state.settings = payload;\n      state.findLoading = false;\n    },\n    FIND_ERROR: function FIND_ERROR(state) {\n      state.settings = null;\n      state.findLoading = false;\n    },\n    SAVE_STARTED: function SAVE_STARTED(state) {\n      state.saveLoading = true;\n    },\n    SAVE_SUCCESS: function SAVE_SUCCESS(state) {\n      state.saveLoading = false;\n    },\n    SAVE_ERROR: function SAVE_ERROR(state) {\n      state.saveLoading = false;\n    }\n  },\n  actions: {\n    doFind: function () {\n      var _doFind = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n        var commit, settings;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.prev = 1;\n                commit('FIND_STARTED');\n                _context.next = 5;\n                return SettingsService.find();\n\n              case 5:\n                settings = _context.sent;\n                commit('FIND_SUCCESS', settings);\n                _context.next = 14;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                Errors.handle(_context.t0);\n                commit('FIND_ERROR');\n                routerAsync().push('/');\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9]]);\n      }));\n\n      function doFind(_x) {\n        return _doFind.apply(this, arguments);\n      }\n\n      return doFind;\n    }(),\n    doSave: function () {\n      var _doSave = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, values) {\n        var commit, secondsForReload;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.prev = 1;\n                commit('SAVE_STARTED');\n                _context2.next = 5;\n                return SettingsService.save(values);\n\n              case 5:\n                commit('SAVE_SUCCESS');\n                secondsForReload = 3;\n                Message.success(i18n('settings.save.success', secondsForReload));\n                /**\n                 * Theme change happens at boot time.\n                 * So to take effect the page must be reloaded\n                 */\n\n                setTimeout(function () {\n                  return window.location.reload();\n                }, secondsForReload * 1000);\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](1);\n                Errors.handle(_context2.t0);\n                commit('SAVE_ERROR');\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 11]]);\n      }));\n\n      function doSave(_x2, _x3) {\n        return _doSave.apply(this, arguments);\n      }\n\n      return doSave;\n    }()\n  }\n};",{"version":3,"sources":["E:/Projects/vue-library-master/1-Project/frontend/src/modules/settings/settings-store.js"],"names":["SettingsService","Errors","routerAsync","Message","i18n","namespaced","state","findLoading","saveLoading","settings","getters","mutations","FIND_STARTED","FIND_SUCCESS","payload","FIND_ERROR","SAVE_STARTED","SAVE_SUCCESS","SAVE_ERROR","actions","doFind","commit","find","handle","push","doSave","values","save","secondsForReload","success","setTimeout","window","location","reload"],"mappings":"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","sourcesContent":["import { SettingsService } from '@/modules/settings/settings-service';\nimport Errors from '@/shared/error/errors';\nimport { routerAsync } from '@/app-module';\nimport Message from '@/shared/message/message';\nimport { i18n } from '@/i18n';\n\nexport default {\n  namespaced: true,\n\n  state: {\n    findLoading: false,\n    saveLoading: false,\n    settings: null,\n  },\n\n  getters: {\n    settings: (state) => state.settings,\n    findLoading: (state) => !!state.findLoading,\n    saveLoading: (state) => !!state.saveLoading,\n  },\n\n  mutations: {\n    FIND_STARTED(state) {\n      state.settings = null;\n      state.findLoading = true;\n    },\n\n    FIND_SUCCESS(state, payload) {\n      state.settings = payload;\n      state.findLoading = false;\n    },\n\n    FIND_ERROR(state) {\n      state.settings = null;\n      state.findLoading = false;\n    },\n\n    SAVE_STARTED(state) {\n      state.saveLoading = true;\n    },\n\n    SAVE_SUCCESS(state) {\n      state.saveLoading = false;\n    },\n\n    SAVE_ERROR(state) {\n      state.saveLoading = false;\n    },\n  },\n\n  actions: {\n    async doFind({ commit }) {\n      try {\n        commit('FIND_STARTED');\n\n        const settings = await SettingsService.find();\n\n        commit('FIND_SUCCESS', settings);\n      } catch (error) {\n        Errors.handle(error);\n        commit('FIND_ERROR');\n        routerAsync().push('/');\n      }\n    },\n\n    async doSave({ commit }, values) {\n      try {\n        commit('SAVE_STARTED');\n        await SettingsService.save(values);\n        commit('SAVE_SUCCESS');\n\n        const secondsForReload = 3;\n\n        Message.success(\n          i18n('settings.save.success', secondsForReload),\n        );\n\n        /**\n         * Theme change happens at boot time.\n         * So to take effect the page must be reloaded\n         */\n        setTimeout(\n          () => window.location.reload(),\n          secondsForReload * 1000,\n        );\n      } catch (error) {\n        Errors.handle(error);\n        commit('SAVE_ERROR');\n      }\n    },\n  },\n};\n"]}]}