{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\components\\iam-view-toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\components\\iam-view-toolbar.vue","mtime":1641838497818},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\babel.config.js","mtime":1641838494433},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:\\\\Projects\\\\vue-library-master\\\\1-Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { IamPermissions } from '@/modules/iam/iam-permissions';\nimport { AuditLogPermissions } from '@/modules/audit-log/audit-log-permissions';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'app-iam-view-toolbar',\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    currentUser: 'auth/currentUser',\n    record: 'iam/view/record',\n    loading: 'iam/view/loading'\n  })), {}, {\n    hasPermissionToEdit: function hasPermissionToEdit() {\n      return new IamPermissions(this.currentUser).edit;\n    },\n    hasPermissionToImport: function hasPermissionToImport() {\n      return new IamPermissions(this.currentUser).import;\n    },\n    hasPermissionToAuditLogs: function hasPermissionToAuditLogs() {\n      return new AuditLogPermissions(this.currentUser).read;\n    }\n  }),\n  methods: _objectSpread({}, mapActions({\n    doToggleStatus: 'iam/view/doToggleStatus'\n  }))\n};",{"version":3,"sources":["iam-view-toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,cAAA,QAAA,+BAAA;AACA,SAAA,mBAAA,QAAA,2CAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA,kBADA;AAEA,IAAA,MAAA,EAAA,iBAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAAA,CADA;AAOA,IAAA,mBAPA,iCAOA;AACA,aAAA,IAAA,cAAA,CAAA,KAAA,WAAA,EAAA,IAAA;AACA,KATA;AAWA,IAAA,qBAXA,mCAWA;AACA,aAAA,IAAA,cAAA,CAAA,KAAA,WAAA,EAAA,MAAA;AACA,KAbA;AAeA,IAAA,wBAfA,sCAeA;AACA,aAAA,IAAA,mBAAA,CAAA,KAAA,WAAA,EAAA,IAAA;AACA;AAjBA,IAHA;AAuBA,EAAA,OAAA,oBACA,UAAA,CAAA;AACA,IAAA,cAAA,EAAA;AADA,GAAA,CADA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"app-page-toolbar\">\n    <router-link :to=\"{ path: `/iam/${record.id}/edit` }\" v-if=\"record && hasPermissionToEdit\">\n      <el-button icon=\"el-icon-fa-edit\" type=\"primary\">\n        <app-i18n code=\"common.edit\"></app-i18n>\n      </el-button>\n    </router-link>\n\n    <el-button\n      :disabled=\"loading\"\n      :icon=\"record.disabled ? 'el-icon-fa-check' : 'el-icon-fa-ban'\"\n      @click=\"doToggleStatus()\"\n      type=\"primary\"\n      v-if=\"record && hasPermissionToEdit\"\n    >\n      <app-i18n code=\"iam.enable\" v-if=\"record.disabled\"></app-i18n>\n      <app-i18n code=\"iam.disable\" v-if=\"!record.disabled\"></app-i18n>\n    </el-button>\n\n    <router-link\n      :to=\"{ path: '/audit-logs', query: { entityId: record.id } }\"\n      v-if=\"record && hasPermissionToAuditLogs\"\n    >\n      <el-button icon=\"el-icon-fa-history\">\n        <app-i18n code=\"auditLog.menu\"></app-i18n>\n      </el-button>\n    </router-link>\n\n    <router-link\n      :to=\"{ path: '/audit-logs', query: { createdByEmail: record.email } }\"\n      v-if=\"record && hasPermissionToAuditLogs\"\n    >\n      <el-button icon=\"el-icon-fa-eye\">\n        <app-i18n code=\"iam.view.activity\"></app-i18n>\n      </el-button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nimport { IamPermissions } from '@/modules/iam/iam-permissions';\nimport { AuditLogPermissions } from '@/modules/audit-log/audit-log-permissions';\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'app-iam-view-toolbar',\n\n  computed: {\n    ...mapGetters({\n      currentUser: 'auth/currentUser',\n      record: 'iam/view/record',\n      loading: 'iam/view/loading',\n    }),\n\n    hasPermissionToEdit() {\n      return new IamPermissions(this.currentUser).edit;\n    },\n\n    hasPermissionToImport() {\n      return new IamPermissions(this.currentUser).import;\n    },\n\n    hasPermissionToAuditLogs() {\n      return new AuditLogPermissions(this.currentUser).read;\n    },\n  },\n\n  methods: {\n    ...mapActions({\n      doToggleStatus: 'iam/view/doToggleStatus',\n    }),\n  },\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/modules/iam/components"}]}