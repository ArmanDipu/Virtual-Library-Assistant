{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\audit-log\\components\\audit-log-filter.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\audit-log\\components\\audit-log-filter.vue","mtime":1641838496298},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nimport { FilterSchema } from '@/shared/form/filter-schema';\nimport { AuditLogModel } from '@/modules/audit-log/audit-log-model';\nimport { i18n } from '@/i18n';\n\nconst { fields } = AuditLogModel;\n\nconst filterSchema = new FilterSchema([\n  fields.timestampRange,\n  fields.createdByEmail,\n  fields.entityId,\n  fields.action,\n  fields.entityNames,\n]);\n\nexport default {\n  name: 'app-audit-log-filter',\n\n  data() {\n    return {\n      rules: filterSchema.rules(),\n      model: {},\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      labelPosition: 'layout/labelPosition',\n      labelWidthFilter: 'layout/labelWidthFilter',\n      loading: 'auditLog/loading',\n      filter: 'auditLog/filter',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  async mounted() {\n    this.model = filterSchema.initialValues(\n      this.filter,\n      this.$route.query,\n    );\n\n    return this.doFilter();\n  },\n\n  methods: {\n    ...mapActions({\n      doReset: 'auditLog/doReset',\n      doFetch: 'auditLog/doFetch',\n    }),\n\n    async doResetFilter() {\n      this.model = filterSchema.initialValues();\n      this.$refs.form.clearValidate();\n      return this.doReset();\n    },\n\n    async doFilter() {\n      try {\n        await this.$refs.form.validate();\n        this.$refs.form.clearValidate();\n      } catch (error) {\n        return;\n      }\n\n      const filter = filterSchema.cast(this.model);\n      return this.doFetch({\n        filter,\n      });\n    },\n\n    i18n(code) {\n      return i18n(code);\n    },\n  },\n};\n",{"version":3,"sources":["audit-log-filter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"audit-log-filter.vue","sourceRoot":"src/modules/audit-log/components","sourcesContent":["<template>\n  <el-form\n    :label-position=\"labelPosition\"\n    :label-width=\"labelWidthFilter\"\n    :model=\"model\"\n    :rules=\"rules\"\n    @submit.native.prevent=\"doFilter\"\n    class=\"filter\"\n    ref=\"form\"\n  >\n    <el-row>\n      <el-col style=\"margin-bottom: -0.41px;\" :lg=\"12\" :md=\"16\" :sm=\"24\">\n        <el-form-item :label=\"fields.timestampRange.label\" :prop=\"fields.timestampRange.name\">\n          <el-date-picker type=\"datetimerange\" v-model=\"model[fields.timestampRange.name]\"></el-date-picker>\n        </el-form-item>\n      </el-col>\n      <el-col :lg=\"12\" :md=\"16\" :sm=\"24\">\n        <el-form-item :label=\"fields.entityNames.label\" :prop=\"fields.entityNames.name\">\n          <el-select\n            :no-data-text=\"i18n('auditLog.entityNamesHint')\"\n            allow-create\n            default-first-option\n            filterable\n            multiple\n            placeholder\n            v-model=\"model[fields.entityNames.name]\"\n          ></el-select>\n        </el-form-item>\n      </el-col>\n      <el-col :lg=\"12\" :md=\"16\" :sm=\"24\">\n        <el-form-item :label=\"fields.createdByEmail.label\" :prop=\"fields.createdByEmail.name\">\n          <el-input v-model=\"model[fields.createdByEmail.name]\"/>\n        </el-form-item>\n      </el-col>\n      <el-col :lg=\"12\" :md=\"16\" :sm=\"24\">\n        <el-form-item :label=\"fields.entityId.label\" :prop=\"fields.entityId.name\">\n          <el-input v-model=\"model[fields.entityId.name]\"/>\n        </el-form-item>\n      </el-col>\n      <el-col :lg=\"12\" :md=\"16\" :sm=\"24\">\n        <el-form-item :label=\"fields.action.label\" :prop=\"fields.action.name\">\n          <el-input v-model=\"model[fields.action.name]\"/>\n        </el-form-item>\n      </el-col>\n    </el-row>\n\n    <div class=\"filter-buttons\">\n      <el-button :disabled=\"loading\" @click=\"doFilter\" icon=\"el-icon-fa-search\" type=\"primary\">\n        <app-i18n code=\"common.search\"></app-i18n>\n      </el-button>\n\n      <el-button :disabled=\"loading\" @click=\"doResetFilter\" icon=\"el-icon-fa-undo\">\n        <app-i18n code=\"common.reset\"></app-i18n>\n      </el-button>\n    </div>\n  </el-form>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { FilterSchema } from '@/shared/form/filter-schema';\nimport { AuditLogModel } from '@/modules/audit-log/audit-log-model';\nimport { i18n } from '@/i18n';\n\nconst { fields } = AuditLogModel;\n\nconst filterSchema = new FilterSchema([\n  fields.timestampRange,\n  fields.createdByEmail,\n  fields.entityId,\n  fields.action,\n  fields.entityNames,\n]);\n\nexport default {\n  name: 'app-audit-log-filter',\n\n  data() {\n    return {\n      rules: filterSchema.rules(),\n      model: {},\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      labelPosition: 'layout/labelPosition',\n      labelWidthFilter: 'layout/labelWidthFilter',\n      loading: 'auditLog/loading',\n      filter: 'auditLog/filter',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  async mounted() {\n    this.model = filterSchema.initialValues(\n      this.filter,\n      this.$route.query,\n    );\n\n    return this.doFilter();\n  },\n\n  methods: {\n    ...mapActions({\n      doReset: 'auditLog/doReset',\n      doFetch: 'auditLog/doFetch',\n    }),\n\n    async doResetFilter() {\n      this.model = filterSchema.initialValues();\n      this.$refs.form.clearValidate();\n      return this.doReset();\n    },\n\n    async doFilter() {\n      try {\n        await this.$refs.form.validate();\n        this.$refs.form.clearValidate();\n      } catch (error) {\n        return;\n      }\n\n      const filter = filterSchema.cast(this.model);\n      return this.doFetch({\n        filter,\n      });\n    },\n\n    i18n(code) {\n      return i18n(code);\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}