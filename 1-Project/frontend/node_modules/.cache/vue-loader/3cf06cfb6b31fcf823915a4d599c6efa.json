{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\importer\\components\\importer-toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\importer\\components\\importer-toolbar.vue","mtime":1641838499966},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { i18n } from '@/i18n';\n\nexport default {\n  name: 'app-importer-toolbar',\n\n  props: ['storePath'],\n\n  computed: {\n    hasRows() {\n      return this.$store.getters[\n        `${this.storePath}/hasRows`\n      ];\n    },\n    importing() {\n      return this.$store.getters[\n        `${this.storePath}/importing`\n      ];\n    },\n    completed() {\n      return this.$store.getters[\n        `${this.storePath}/completed`\n      ];\n    },\n    hint() {\n      return this.$store.getters[`${this.storePath}/hint`];\n    },\n  },\n\n  methods: {\n    async doNew() {\n      try {\n        await this.$confirm(\n          i18n('common.areYouSure'),\n          i18n('common.confirm'),\n          {\n            confirmButtonText: i18n('common.yes'),\n            cancelButtonText: i18n('common.no'),\n            type: 'warning',\n          },\n        );\n\n        return this.$store.dispatch(\n          `${this.storePath}/doReset`,\n        );\n      } catch (error) {\n        // no\n      }\n    },\n\n    async doDiscard() {\n      try {\n        await this.$confirm(\n          i18n('importer.list.discardConfirm'),\n          i18n('common.confirm'),\n          {\n            confirmButtonText: i18n('common.yes'),\n            cancelButtonText: i18n('common.no'),\n            type: 'warning',\n          },\n        );\n\n        return this.$store.dispatch(\n          `${this.storePath}/doReset`,\n        );\n      } catch (error) {\n        // no\n      }\n    },\n\n    doReset() {\n      return this.$store.dispatch(\n        `${this.storePath}/doReset`,\n      );\n    },\n    doPause() {\n      return this.$store.dispatch(\n        `${this.storePath}/doPause`,\n      );\n    },\n    doImport() {\n      return this.$store.dispatch(\n        `${this.storePath}/doImport`,\n      );\n    },\n    doDownloadTemplate() {\n      return this.$store.dispatch(\n        `${this.storePath}/doDownloadTemplate`,\n      );\n    },\n  },\n};\n",{"version":3,"sources":["importer-toolbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"importer-toolbar.vue","sourceRoot":"src/shared/importer/components","sourcesContent":["<template>\n  <div class=\"app-page-toolbar\">\n    <el-tooltip :content=\"hint\" :disabled=\"!hint\" v-if=\"!hasRows\">\n      <span>\n        <el-button @click=\"doDownloadTemplate\" icon=\"el-icon-fa-file-excel-o\">\n          <app-i18n code=\"importer.form.downloadTemplate\"></app-i18n>\n        </el-button>\n      </span>\n    </el-tooltip>\n\n    <el-button\n      @click=\"doImport\"\n      icon=\"el-icon-fa-upload\"\n      type=\"primary\"\n      v-if=\"hasRows && !importing && !completed\"\n    >\n      <app-i18n code=\"common.import\"></app-i18n>\n    </el-button>\n\n    <el-button @click=\"doPause\" icon=\"el-icon-fa-pause\" v-if=\"hasRows && importing\">\n      <app-i18n code=\"common.pause\"></app-i18n>\n    </el-button>\n\n    <el-button @click=\"doNew\" icon=\"el-icon-fa-file-o\" v-if=\"!!completed\">\n      <app-i18n code=\"common.new\"></app-i18n>\n    </el-button>\n\n    <el-button\n      @click=\"doDiscard\"\n      icon=\"el-icon-fa-trash\"\n      v-if=\"hasRows && !importing && !completed\"\n    >\n      <app-i18n code=\"common.discard\"></app-i18n>\n    </el-button>\n  </div>\n</template>\n\n<script>\nimport { i18n } from '@/i18n';\n\nexport default {\n  name: 'app-importer-toolbar',\n\n  props: ['storePath'],\n\n  computed: {\n    hasRows() {\n      return this.$store.getters[\n        `${this.storePath}/hasRows`\n      ];\n    },\n    importing() {\n      return this.$store.getters[\n        `${this.storePath}/importing`\n      ];\n    },\n    completed() {\n      return this.$store.getters[\n        `${this.storePath}/completed`\n      ];\n    },\n    hint() {\n      return this.$store.getters[`${this.storePath}/hint`];\n    },\n  },\n\n  methods: {\n    async doNew() {\n      try {\n        await this.$confirm(\n          i18n('common.areYouSure'),\n          i18n('common.confirm'),\n          {\n            confirmButtonText: i18n('common.yes'),\n            cancelButtonText: i18n('common.no'),\n            type: 'warning',\n          },\n        );\n\n        return this.$store.dispatch(\n          `${this.storePath}/doReset`,\n        );\n      } catch (error) {\n        // no\n      }\n    },\n\n    async doDiscard() {\n      try {\n        await this.$confirm(\n          i18n('importer.list.discardConfirm'),\n          i18n('common.confirm'),\n          {\n            confirmButtonText: i18n('common.yes'),\n            cancelButtonText: i18n('common.no'),\n            type: 'warning',\n          },\n        );\n\n        return this.$store.dispatch(\n          `${this.storePath}/doReset`,\n        );\n      } catch (error) {\n        // no\n      }\n    },\n\n    doReset() {\n      return this.$store.dispatch(\n        `${this.storePath}/doReset`,\n      );\n    },\n    doPause() {\n      return this.$store.dispatch(\n        `${this.storePath}/doPause`,\n      );\n    },\n    doImport() {\n      return this.$store.dispatch(\n        `${this.storePath}/doImport`,\n      );\n    },\n    doDownloadTemplate() {\n      return this.$store.dispatch(\n        `${this.storePath}/doDownloadTemplate`,\n      );\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}