{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\list\\list-item-relation-to-one.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\shared\\list\\list-item-relation-to-one.vue","mtime":1641838500081},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport PermissionChecker from '@/modules/iam/permission-checker';\n\nexport default {\n  name: 'app-list-item-relation-to-one',\n\n  props: ['value', 'url', 'permission'],\n\n  computed: {\n    ...mapGetters({\n      currentUser: 'auth/currentUser',\n    }),\n\n    hasPermissionToRead() {\n      return new PermissionChecker(this.currentUser).match(\n        this.permission,\n      );\n    },\n\n    urlWithId() {\n      if (!this.value) {\n        return null;\n      }\n\n      return `${this.url}/${this.value.id}`;\n    },\n\n    isBlank() {\n      return !this.value || !this.value.id;\n    },\n\n    display() {\n      if (!this.value) {\n        return null;\n      }\n\n      return this.value.label;\n    },\n  },\n};\n",{"version":3,"sources":["list-item-relation-to-one.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"list-item-relation-to-one.vue","sourceRoot":"src/shared/list","sourcesContent":["<template>\n  <div v-if=\"!isBlank\">\n    <router-link :to=\"urlWithId\" v-if=\"hasPermissionToRead\">\n      <strong>{{ display }}</strong>\n    </router-link>\n    <strong v-if=\"!hasPermissionToRead\">{{ display }}</strong>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport PermissionChecker from '@/modules/iam/permission-checker';\n\nexport default {\n  name: 'app-list-item-relation-to-one',\n\n  props: ['value', 'url', 'permission'],\n\n  computed: {\n    ...mapGetters({\n      currentUser: 'auth/currentUser',\n    }),\n\n    hasPermissionToRead() {\n      return new PermissionChecker(this.currentUser).match(\n        this.permission,\n      );\n    },\n\n    urlWithId() {\n      if (!this.value) {\n        return null;\n      }\n\n      return `${this.url}/${this.value.id}`;\n    },\n\n    isBlank() {\n      return !this.value || !this.value.id;\n    },\n\n    display() {\n      if (!this.value) {\n        return null;\n      }\n\n      return this.value.label;\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}