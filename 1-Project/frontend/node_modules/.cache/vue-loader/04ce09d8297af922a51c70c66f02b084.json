{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\components\\iam-new-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\iam\\components\\iam-new-page.vue","mtime":1641838497776},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nimport { FormSchema } from '@/shared/form/form-schema';\nimport { UserModel } from '@/modules/auth/user-model';\nimport { i18n } from '@/i18n';\n\nconst { fields } = UserModel;\nconst formSchema = new FormSchema([\n  fields.emails,\n  fields.firstName,\n  fields.lastName,\n  fields.phoneNumber,\n  fields.avatarsIam,\n  fields.rolesRequired,\n]);\n\nexport default {\n  name: 'app-iam-new-page',\n\n  data() {\n    return {\n      rules: formSchema.rules(),\n      model: {},\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      labelPosition: 'layout/labelPosition',\n      labelWidthForm: 'layout/labelWidthForm',\n      saveLoading: 'iam/form/saveLoading',\n    }),\n\n    isUniqueEmail() {\n      return (\n        !this.model ||\n        !this.model.emails ||\n        this.model.emails.length <= 1\n      );\n    },\n\n    fields() {\n      return fields;\n    },\n  },\n\n  async created() {\n    await this.doNew();\n    this.doReset();\n  },\n\n  methods: {\n    ...mapActions({\n      doNew: 'iam/form/doNew',\n      doAdd: 'iam/form/doAdd',\n    }),\n\n    doReset() {\n      this.model = formSchema.initialValues();\n      this.$refs.form.resetFields();\n    },\n\n    async doSubmit() {\n      try {\n        await this.$refs.form.validate();\n      } catch (error) {\n        return;\n      }\n\n      const values = formSchema.cast(this.model);\n      return this.doAdd(values);\n    },\n\n    i18n(code) {\n      return i18n(code);\n    },\n  },\n};\n",{"version":3,"sources":["iam-new-page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"iam-new-page.vue","sourceRoot":"src/modules/iam/components","sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/' }\">\n        <app-i18n code=\"home.menu\"></app-i18n>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item :to=\"{ path: '/iam' }\">\n        <app-i18n code=\"iam.menu\"></app-i18n>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <app-i18n code=\"iam.new.title\"></app-i18n>\n      </el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <div class=\"app-content-page\">\n      <h1 class=\"app-content-title\">\n        <app-i18n code=\"iam.new.title\"></app-i18n>\n      </h1>\n\n      <el-form\n        :label-position=\"labelPosition\"\n        :label-width=\"labelWidthForm\"\n        :model=\"model\"\n        :rules=\"rules\"\n        @submit.native.prevent=\"doSubmit\"\n        class=\"form\"\n        ref=\"form\"\n      >\n        <el-form-item\n          :label=\"fields.emails.label\"\n          :prop=\"fields.emails.name\"\n          :required=\"fields.emails.required\"\n        >\n          <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n            <el-select\n              :no-data-text=\"i18n('iam.new.emailsHint')\"\n              allow-create\n              default-first-option\n              filterable\n              multiple\n              placeholder\n              ref=\"focus\"\n              v-model=\"model[fields.emails.name]\"\n            ></el-select>\n          </el-col>\n        </el-form-item>\n\n        <div v-if=\"isUniqueEmail\">\n          <el-form-item\n            :label=\"fields.firstName.label\"\n            :prop=\"fields.firstName.name\"\n            :required=\"fields.firstName.required\"\n          >\n            <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n              <el-input v-model=\"model[fields.firstName.name]\"/>\n            </el-col>\n          </el-form-item>\n\n          <el-form-item\n            :label=\"fields.lastName.label\"\n            :prop=\"fields.lastName.name\"\n            :required=\"fields.lastName.required\"\n          >\n            <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n              <el-input v-model=\"model[fields.lastName.name]\"/>\n            </el-col>\n          </el-form-item>\n\n          <el-form-item\n            :label=\"fields.phoneNumber.label\"\n            :prop=\"fields.phoneNumber.name\"\n            :required=\"fields.phoneNumber.required\"\n          >\n            <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n              <el-input prefix-icon=\"el-icon-fa-plus\" v-model=\"model[fields.phoneNumber.name]\"/>\n            </el-col>\n          </el-form-item>\n\n          <el-form-item\n            :label=\"fields.avatarsIam.label\"\n            :prop=\"fields.avatarsIam.name\"\n            :required=\"fields.avatarsIam.required\"\n          >\n            <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n              <app-image-upload\n                :max=\"fields.avatarsIam.max\"\n                :path=\"fields.avatarsIam.path\"\n                :schema=\"fields.avatarsIam.fileSchema\"\n                v-model=\"model[fields.avatarsIam.name]\"\n              ></app-image-upload>\n            </el-col>\n          </el-form-item>\n        </div>\n\n        <el-form-item\n          :label=\"fields.rolesRequired.label\"\n          :prop=\"fields.rolesRequired.name\"\n          :required=\"fields.rolesRequired.required\"\n        >\n          <el-col :lg=\"11\" :md=\"16\" :sm=\"24\">\n            <el-select multiple placeholder v-model=\"model[fields.rolesRequired.name]\">\n              <el-option\n                :key=\"option.value\"\n                :label=\"option.label\"\n                :value=\"option.value\"\n                v-for=\"option in fields.rolesRequired.options\"\n              ></el-option>\n            </el-select>\n          </el-col>\n        </el-form-item>\n\n        <el-form-item>\n          <div class=\"form-buttons\">\n            <el-button\n              :disabled=\"saveLoading\"\n              @click=\"doSubmit\"\n              icon=\"el-icon-fa-floppy-o\"\n              type=\"primary\"\n            >\n              <app-i18n code=\"common.save\"></app-i18n>\n            </el-button>\n\n            <el-button :disabled=\"saveLoading\" @click=\"doReset\" icon=\"el-icon-fa-undo\">\n              <app-i18n code=\"common.reset\"></app-i18n>\n            </el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { FormSchema } from '@/shared/form/form-schema';\nimport { UserModel } from '@/modules/auth/user-model';\nimport { i18n } from '@/i18n';\n\nconst { fields } = UserModel;\nconst formSchema = new FormSchema([\n  fields.emails,\n  fields.firstName,\n  fields.lastName,\n  fields.phoneNumber,\n  fields.avatarsIam,\n  fields.rolesRequired,\n]);\n\nexport default {\n  name: 'app-iam-new-page',\n\n  data() {\n    return {\n      rules: formSchema.rules(),\n      model: {},\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      labelPosition: 'layout/labelPosition',\n      labelWidthForm: 'layout/labelWidthForm',\n      saveLoading: 'iam/form/saveLoading',\n    }),\n\n    isUniqueEmail() {\n      return (\n        !this.model ||\n        !this.model.emails ||\n        this.model.emails.length <= 1\n      );\n    },\n\n    fields() {\n      return fields;\n    },\n  },\n\n  async created() {\n    await this.doNew();\n    this.doReset();\n  },\n\n  methods: {\n    ...mapActions({\n      doNew: 'iam/form/doNew',\n      doAdd: 'iam/form/doAdd',\n    }),\n\n    doReset() {\n      this.model = formSchema.initialValues();\n      this.$refs.form.resetFields();\n    },\n\n    async doSubmit() {\n      try {\n        await this.$refs.form.validate();\n      } catch (error) {\n        return;\n      }\n\n      const values = formSchema.cast(this.model);\n      return this.doAdd(values);\n    },\n\n    i18n(code) {\n      return i18n(code);\n    },\n  },\n};\n</script>\n"]}]}