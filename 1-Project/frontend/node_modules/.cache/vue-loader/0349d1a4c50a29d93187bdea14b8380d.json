{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\auth\\components\\signin-page.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\auth\\components\\signin-page.vue","mtime":1641838496638},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nimport { UserModel } from '@/modules/auth/user-model';\n\nconst { fields } = UserModel;\n\nexport default {\n  name: 'app-signin-page',\n\n  data() {\n    return {\n      rules: {\n        email: fields.email.forFormRules(),\n        password: fields.password.forFormRules(),\n        rememberMe: fields.rememberMe.forFormRules(),\n      },\n      model: {\n        rememberMe: true,\n      },\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      loading: 'auth/loading',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  methods: {\n    ...mapActions({\n      doSigninWithEmailAndPassword:\n        'auth/doSigninWithEmailAndPassword',\n    }),\n\n    async doSubmit() {\n      try {\n        await this.$refs.form.validate();\n      } catch (error) {\n        return;\n      }\n\n      await this.doSigninWithEmailAndPassword({\n        email: this.model.email,\n        password: this.model.password,\n        rememberMe: this.model.rememberMe,\n      });\n    },\n  },\n};\n",{"version":3,"sources":["signin-page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"signin-page.vue","sourceRoot":"src/modules/auth/components","sourcesContent":["<template>\n  <div class=\"auth\">\n    <div class=\"wrapper signin\">\n      <div class=\"content\">\n        <div class=\"logo\">\n          <h1>\n            <app-i18n code=\"app.title\"></app-i18n>\n          </h1>\n        </div>\n\n        <el-form\n          :model=\"model\"\n          :rules=\"rules\"\n          @submit.prevent.native=\"doSubmit\"\n          class=\"form\"\n          label-position=\"left\"\n          label-width=\"0px\"\n          ref=\"form\"\n        >\n          <el-form-item :prop=\"fields.email.name\">\n            <el-input\n              :placeholder=\"fields.email.label\"\n              auto-complete=\"off\"\n              ref=\"focus\"\n              type=\"text\"\n              v-model=\"model[fields.email.name]\"\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item :prop=\"fields.password.name\">\n            <el-input\n              :placeholder=\"fields.password.label\"\n              auto-complete=\"off\"\n              type=\"password\"\n              v-model=\"model[fields.password.name]\"\n            ></el-input>\n          </el-form-item>\n\n          <div>\n            <div\n              class=\"w-100\"\n              style=\"margin-bottom: 16px; display: flex; align-items: baseline; justify-content: space-between;\"\n            >\n              <el-checkbox v-model=\"model[fields.rememberMe.name]\">{{ fields.rememberMe.label }}</el-checkbox>\n\n              <router-link :to=\"{ path: '/auth/forgot-password' }\">\n                <el-button type=\"text\">\n                  <app-i18n code=\"auth.forgotPassword\"></app-i18n>\n                </el-button>\n              </router-link>\n            </div>\n          </div>\n\n          <el-form-item class=\"form-buttons\">\n            <el-button :loading=\"loading\" class=\"w-100\" native-type=\"submit\" type=\"primary\">\n              <app-i18n code=\"auth.signin\"></app-i18n>\n            </el-button>\n          </el-form-item>\n\n          <div class=\"other-actions\">\n            <router-link :to=\"{ path: '/auth/signup' }\">\n              <el-button type=\"text\">\n                <app-i18n code=\"auth.createAnAccount\"></app-i18n>\n              </el-button>\n            </router-link>\n          </div>\n\n          <app-i18n-flags></app-i18n-flags>\n        </el-form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { UserModel } from '@/modules/auth/user-model';\n\nconst { fields } = UserModel;\n\nexport default {\n  name: 'app-signin-page',\n\n  data() {\n    return {\n      rules: {\n        email: fields.email.forFormRules(),\n        password: fields.password.forFormRules(),\n        rememberMe: fields.rememberMe.forFormRules(),\n      },\n      model: {\n        rememberMe: true,\n      },\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      loading: 'auth/loading',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  methods: {\n    ...mapActions({\n      doSigninWithEmailAndPassword:\n        'auth/doSigninWithEmailAndPassword',\n    }),\n\n    async doSubmit() {\n      try {\n        await this.$refs.form.validate();\n      } catch (error) {\n        return;\n      }\n\n      await this.doSigninWithEmailAndPassword({\n        email: this.model.email,\n        password: this.model.password,\n        rememberMe: this.model.rememberMe,\n      });\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}