{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\audit-log\\components\\audit-log-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\audit-log\\components\\audit-log-table.vue","mtime":1641838496340},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1641838769328},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AuditLogModel } from '@/modules/audit-log/audit-log-model';\nimport { mapGetters, mapActions } from 'vuex';\n\nconst { fields } = AuditLogModel;\n\nexport default {\n  name: 'app-audit-log-table',\n\n  computed: {\n    ...mapGetters({\n      rows: 'auditLog/rows',\n      count: 'auditLog/count',\n      loading: 'auditLog/loading',\n      pagination: 'auditLog/pagination',\n      isMobile: 'layout/isMobile',\n      paginationLayout: 'layout/paginationLayout',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  methods: {\n    ...mapActions({\n      doChangeSort: 'auditLog/doChangeSort',\n      doChangePaginationCurrentPage:\n        'auditLog/doChangePaginationCurrentPage',\n      doChangePaginationPageSize:\n        'auditLog/doChangePaginationPageSize',\n    }),\n\n    presenter(row, fieldName) {\n      return AuditLogModel.presenter(row, fieldName);\n    },\n\n    view(values) {\n      const data = JSON.stringify(values, null, 2);\n      const jsonWindow = window.open(\n        '',\n        '_blank',\n        'toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400',\n      );\n      jsonWindow.document.write(`<pre>${data}</pre>`);\n    },\n  },\n};\n",{"version":3,"sources":["audit-log-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"audit-log-table.vue","sourceRoot":"src/modules/audit-log/components","sourcesContent":["<template>\n  <div>\n    <el-table\n      :border=\"true\"\n      :data=\"rows\"\n      @sort-change=\"doChangeSort\"\n      row-key=\"id\"\n      v-loading=\"loading\"\n    >\n      <el-table-column\n        :label=\"fields.timestamp.label\"\n        :prop=\"fields.timestamp.name\"\n        sortable=\"custom\"\n      >\n        <template slot-scope=\"scope\">{{ presenter(scope.row, 'timestamp') }}</template>\n      </el-table-column>\n      <el-table-column\n        :label=\"fields.createdByEmail.label\"\n        :prop=\"fields.createdByEmail.name\"\n        sortable=\"custom\"\n      >\n        <template slot-scope=\"scope\">{{ presenter(scope.row, 'createdByEmail') }}</template>\n      </el-table-column>\n      <el-table-column\n        :label=\"fields.entityName.label\"\n        :prop=\"fields.entityName.name\"\n        sortable=\"custom\"\n      >\n        <template slot-scope=\"scope\">{{ presenter(scope.row, 'entityName') }}</template>\n      </el-table-column>\n      <el-table-column :label=\"fields.action.label\" :prop=\"fields.action.name\" sortable=\"custom\">\n        <template slot-scope=\"scope\">{{ presenter(scope.row, 'action') }}</template>\n      </el-table-column>\n      <el-table-column\n        :label=\"fields.entityId.label\"\n        :prop=\"fields.entityId.name\"\n        sortable=\"custom\"\n      >\n        <template slot-scope=\"scope\">{{ presenter(scope.row, 'entityId') }}</template>\n      </el-table-column>\n\n      <el-table-column :fixed=\"isMobile? undefined : 'right'\" align=\"center\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-button @click=\"view(scope.row[fields.values.name])\" type=\"text\">\n            <app-i18n code=\"common.view\"></app-i18n>\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"el-pagination-wrapper\">\n      <el-pagination\n        :current-page=\"pagination.currentPage || 1\"\n        :disabled=\"loading\"\n        :layout=\"paginationLayout\"\n        :total=\"count\"\n        @current-change=\"doChangePaginationCurrentPage\"\n        @size-change=\"doChangePaginationPageSize\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { AuditLogModel } from '@/modules/audit-log/audit-log-model';\nimport { mapGetters, mapActions } from 'vuex';\n\nconst { fields } = AuditLogModel;\n\nexport default {\n  name: 'app-audit-log-table',\n\n  computed: {\n    ...mapGetters({\n      rows: 'auditLog/rows',\n      count: 'auditLog/count',\n      loading: 'auditLog/loading',\n      pagination: 'auditLog/pagination',\n      isMobile: 'layout/isMobile',\n      paginationLayout: 'layout/paginationLayout',\n    }),\n\n    fields() {\n      return fields;\n    },\n  },\n\n  methods: {\n    ...mapActions({\n      doChangeSort: 'auditLog/doChangeSort',\n      doChangePaginationCurrentPage:\n        'auditLog/doChangePaginationCurrentPage',\n      doChangePaginationPageSize:\n        'auditLog/doChangePaginationPageSize',\n    }),\n\n    presenter(row, fieldName) {\n      return AuditLogModel.presenter(row, fieldName);\n    },\n\n    view(values) {\n      const data = JSON.stringify(values, null, 2);\n      const jsonWindow = window.open(\n        '',\n        '_blank',\n        'toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=400,height=400',\n      );\n      jsonWindow.document.write(`<pre>${data}</pre>`);\n    },\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}