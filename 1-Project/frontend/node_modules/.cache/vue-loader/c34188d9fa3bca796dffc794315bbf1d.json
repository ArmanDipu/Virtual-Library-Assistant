{"remainingRequest":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\book\\components\\book-form-page.vue?vue&type=template&id=04c42cb0&","dependencies":[{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\src\\modules\\book\\components\\book-form-page.vue","mtime":1641838497065},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1641838769724},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641838763341},{"path":"E:\\Projects\\vue-library-master\\1-Project\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1641838768457}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-breadcrumb\",\n        { attrs: { \"separator-class\": \"el-icon-arrow-right\" } },\n        [\n          _c(\n            \"el-breadcrumb-item\",\n            { attrs: { to: { path: \"/\" } } },\n            [_c(\"app-i18n\", { attrs: { code: \"home.menu\" } })],\n            1\n          ),\n          _c(\n            \"el-breadcrumb-item\",\n            { attrs: { to: { path: \"/book\" } } },\n            [_c(\"app-i18n\", { attrs: { code: \"entities.book.menu\" } })],\n            1\n          ),\n          _c(\n            \"el-breadcrumb-item\",\n            [\n              _vm.isEditing\n                ? _c(\"app-i18n\", {\n                    attrs: { code: \"entities.book.edit.title\" },\n                  })\n                : _vm._e(),\n              !_vm.isEditing\n                ? _c(\"app-i18n\", { attrs: { code: \"entities.book.new.title\" } })\n                : _vm._e(),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"app-content-page\" },\n        [\n          _c(\n            \"h1\",\n            { staticClass: \"app-content-title\" },\n            [\n              _vm.isEditing\n                ? _c(\"app-i18n\", {\n                    attrs: { code: \"entities.book.edit.title\" },\n                  })\n                : _vm._e(),\n              !_vm.isEditing\n                ? _c(\"app-i18n\", { attrs: { code: \"entities.book.new.title\" } })\n                : _vm._e(),\n            ],\n            1\n          ),\n          _vm.findLoading\n            ? _c(\"div\", {\n                directives: [\n                  {\n                    name: \"loading\",\n                    rawName: \"v-loading\",\n                    value: _vm.findLoading,\n                    expression: \"findLoading\",\n                  },\n                ],\n                staticClass: \"app-page-spinner\",\n              })\n            : _vm._e(),\n          _vm.model\n            ? _c(\n                \"el-form\",\n                {\n                  ref: \"form\",\n                  staticClass: \"form\",\n                  attrs: {\n                    \"label-position\": _vm.labelPosition,\n                    \"label-width\": _vm.labelWidthForm,\n                    model: _vm.model,\n                    rules: _vm.rules,\n                  },\n                  nativeOn: {\n                    submit: function ($event) {\n                      $event.preventDefault()\n                      return _vm.doSubmit($event)\n                    },\n                  },\n                },\n                [\n                  _vm.isEditing\n                    ? _c(\n                        \"el-form-item\",\n                        {\n                          attrs: {\n                            label: _vm.fields.id.label,\n                            prop: _vm.fields.id.name,\n                          },\n                        },\n                        [\n                          _c(\n                            \"el-col\",\n                            { attrs: { lg: 11, md: 16, sm: 24 } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: { disabled: true },\n                                model: {\n                                  value: _vm.model[_vm.fields.id.name],\n                                  callback: function ($$v) {\n                                    _vm.$set(_vm.model, _vm.fields.id.name, $$v)\n                                  },\n                                  expression: \"model[fields.id.name]\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.isbn.label,\n                        prop: _vm.fields.isbn.name,\n                        required: _vm.fields.isbn.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"el-input\", {\n                            ref: \"focus\",\n                            model: {\n                              value: _vm.model[_vm.fields.isbn.name],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, _vm.fields.isbn.name, $$v)\n                              },\n                              expression: \"model[fields.isbn.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.title.label,\n                        prop: _vm.fields.title.name,\n                        required: _vm.fields.title.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.model[_vm.fields.title.name],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, _vm.fields.title.name, $$v)\n                              },\n                              expression: \"model[fields.title.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.author.label,\n                        prop: _vm.fields.author.name,\n                        required: _vm.fields.author.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"el-input\", {\n                            model: {\n                              value: _vm.model[_vm.fields.author.name],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, _vm.fields.author.name, $$v)\n                              },\n                              expression: \"model[fields.author.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.numberOfCopies.label,\n                        prop: _vm.fields.numberOfCopies.name,\n                        required: _vm.fields.numberOfCopies.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { precision: 0, step: 1 },\n                            model: {\n                              value: _vm.model[_vm.fields.numberOfCopies.name],\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.model,\n                                  _vm.fields.numberOfCopies.name,\n                                  $$v\n                                )\n                              },\n                              expression: \"model[fields.numberOfCopies.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.stock.label,\n                        prop: _vm.fields.stock.name,\n                        required: _vm.fields.stock.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"el-input-number\", {\n                            attrs: { precision: 0, step: 1 },\n                            model: {\n                              value: _vm.model[_vm.fields.stock.name],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, _vm.fields.stock.name, $$v)\n                              },\n                              expression: \"model[fields.stock.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.images.label,\n                        prop: _vm.fields.images.name,\n                        required: _vm.fields.images.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\"app-image-upload\", {\n                            attrs: {\n                              max: _vm.fields.images.max,\n                              path: _vm.fields.images.path,\n                              schema: _vm.fields.images.fileSchema,\n                            },\n                            model: {\n                              value: _vm.model[_vm.fields.images.name],\n                              callback: function ($$v) {\n                                _vm.$set(_vm.model, _vm.fields.images.name, $$v)\n                              },\n                              expression: \"model[fields.images.name]\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    {\n                      attrs: {\n                        label: _vm.fields.status.label,\n                        prop: _vm.fields.status.name,\n                        required: _vm.fields.status.required,\n                      },\n                    },\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { lg: 11, md: 16, sm: 24 } },\n                        [\n                          _c(\n                            \"el-select\",\n                            {\n                              attrs: { placeholder: \"\" },\n                              model: {\n                                value: _vm.model[_vm.fields.status.name],\n                                callback: function ($$v) {\n                                  _vm.$set(\n                                    _vm.model,\n                                    _vm.fields.status.name,\n                                    $$v\n                                  )\n                                },\n                                expression: \"model[fields.status.name]\",\n                              },\n                            },\n                            [\n                              _c(\"el-option\", { attrs: { value: undefined } }, [\n                                _vm._v(\"--\"),\n                              ]),\n                              _vm._l(\n                                _vm.fields.status.options,\n                                function (option) {\n                                  return _c(\"el-option\", {\n                                    key: option.id,\n                                    attrs: {\n                                      label: option.label,\n                                      value: option.id,\n                                    },\n                                  })\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                        ],\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                  _c(\"el-form-item\", [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-buttons\" },\n                      [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              disabled: _vm.saveLoading,\n                              icon: \"el-icon-fa-floppy-o\",\n                              type: \"primary\",\n                            },\n                            on: { click: _vm.doSubmit },\n                          },\n                          [_c(\"app-i18n\", { attrs: { code: \"common.save\" } })],\n                          1\n                        ),\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              disabled: _vm.saveLoading,\n                              icon: \"el-icon-fa-undo\",\n                            },\n                            on: { click: _vm.doReset },\n                          },\n                          [_c(\"app-i18n\", { attrs: { code: \"common.reset\" } })],\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ]),\n                ],\n                1\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}